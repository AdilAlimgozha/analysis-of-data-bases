--Alimgozha Adil

CREATE DATABASE lab1;
USE lab1;

/*CREATE TABLE EMPLOYEES(
	EMPLOYEE_ID INT PRIMARY KEY,
	FULL_NAME VARCHAR (50),
	EMAIL VARCHAR (50),
	PHONE_NUMBER VARCHAR (50),
	HIRE_DAT DATE,
	JOB_ID VARCHAR (50),
	SALARY INTEGER
);

SELECT * FROM EMPLOYEES;

INSERT INTO EMPLOYEES
VALUES (100, 'Steven King', 'SKING', '515.123.4567', '1987-06-17', 'AD_PRES', 24000);

INSERT INTO EMPLOYEES
VALUES (101, 'Neena Kochhar', 'NKOCHAR', '515.123.4568', '1989-09-21', 'AD_VP', 17000);

INSERT INTO EMPLOYEES
VALUES (102, 'Lex De Haan', 'LDEHAA', '515.123.4569', '1993-03-13', 'AD_VP', 17000)

INSERT INTO EMPLOYEES
VALUES (103, 'Alexander Hunold', 'AHUNOLD', '590.423.4567', '1990-01-03', 'IT_PROG', 9000),
(104, 'Bruce Ernst', 'BENST', '590.423.4568', '1991-05-21', 'IT_PROG', 6000),
(107, 'Diana Lorentz', 'DLORENTZ', '590.423.5565', '1999-02-07', 'IT_PROG', 4000),
(124, 'Kevin Mourgos', 'KNOURGOS', '650.123.5234', '1999-11-16', 'SH_MAN', 5800),
(141, 'Trenna Rajs', 'TRAJS', '650.121.8009', '1995-10-17', 'SH_CLERK', 3500),
(142, 'Curtis Davies', 'CDAVIES', '650.121.2996', '1997-01-29', 'SH_CLERK', 3100),
(143, 'Randall Matos', 'RMATOS', '650.121.2874', '1998-03-15', 'SH_CLERK', 2600),
(144, 'Peter Vargas', 'PVARGAS', '650.121.2004', '1998-07-09', 'SH_CLERK', 2500),
(149, 'Eleni Zlotkey', 'EZLOTKEY', '011.44.1344.429010', '2000-01-29', 'SA_MAN', 7000),
(174, 'Ellen Abel', 'ABELL', '011.44.1644.429267', '1996-05-11', 'SA_REP', 11000),
(176, 'Jonathon Taylor', 'JTAILOR', '011.44.1644.429265', '1998-03-24', 'SA_REP', 8600),
(178, 'Kimberely Grant', 'KGRANT', '011.44.1644.429263', '1999-05-24', 'SA_REP', 7000),
(200, 'Jennifer Whalen', 'JWHALEN', '515.123.4444', '1987-09-17', 'AD_ASST', 4001),
(201, 'Michael Hartstein', 'MHARTSTE', '515.123.5555', '1996-02-17', 'MK_MAN', 13000),
(202, 'Pat Fay', 'PFAY', '603.123.6666', '1997-08-17', 'MK_REP', 6000),
(205, 'Shelley Higgins', 'SHIGGINS', '515.123.8080', '1994-06-07', 'AC_MGR', 12000),
(206, 'William Gietz', 'WGIETZ', '515.123.8181', '1994-06-07', 'AC_ACCOUNT', 8300);

CREATE TABLE DEPARTMENTS(
	DEPARTMENT_ID INT,
	DEPARTMENT_NAME VARCHAR (50),
	MANAGER_ID INT,
	LOCATION_ID INT
);

SELECT * FROM DEPARTMENTS;

INSERT INTO DEPARTMENTS
VALUES (10, 'Administration', 200, 1700),
(20, 'Marketing', 201, 1800),
(50, 'Shipping', 124, 1500),
(60, 'IT', 103, 1400),
(80, 'Sales', 149, 2500),
(90, 'Executive', 100, 1700),
(110, 'Accounting', 205, 1700), 
(190, 'Contracting', NULL, 1700);

CREATE TABLE JOB_GRADES(
	GRA VARCHAR (50),
	LOWEST_SAL INT,
	HIGHEST_SAL INT
);

SELECT * FROM JOB_GRADES

INSERT INTO JOB_GRADES
VALUES ('A', 1000, 2999),
('B', 3000, 5999),
('C', 6000, 9999),
('D', 10000, 14999),
('E', 15000, 24999),
('F', 25000, 40000);*/

--1 task
SELECT EMPLOYEE_ID, FULL_NAME, HIRE_DAT, SALARY
FROM EMPLOYEES;

--2 task
SELECT EMPLOYEE_ID, FULL_NAME, EMAIL, SALARY * 12 as ANNUAL_SALARY
FROM EMPLOYEES;

--3 task
SELECT DISTINCT JOB_ID 
FROM EMPLOYEES;

--4 task
SELECT * FROM EMPLOYEES 
WHERE JOB_ID = 'IT_PROG' AND SALARY > 5000

--5 TASK
SELECT EMPLOYEE_ID, FULL_NAME, JOB_ID 
FROM EMPLOYEES 
WHERE SALARY BETWEEN 4000 AND 7000

--6 TASK
SELECT FULL_NAME, SALARY 
FROM EMPLOYEES 
WHERE SALARY NOT BETWEEN 3000 AND 9000

--7 TASK
SELECT EMPLOYEE_ID, RIGHT(FULL_NAME,CHARINDEX(' ', (REVERSE(FULL_NAME))) - 1) 
AS LASTNAME, LEFT(FULL_NAME,CHARINDEX(' ', FULL_NAME) - 1) 
AS FIRSTNAME, SALARY * 12 
AS 'ANNUAL SALARY' 
FROM EMPLOYEES 
WHERE SALARY * 12 < 50000

--8 TASK
SELECT EMPLOYEE_ID, FULL_NAME, SALARY 
FROM EMPLOYEES 
WHERE SALARY > 4000 AND SALARY < 7000
/*EXPLANATION OF DIFFERENCE 8 TASK AND 5 TASK: 
IN 5 TASK WE USED "BETWEEN" 
BECAUSE "BETWEEN" INCLUDES THE BOUNDARIES [4000;7000], 
IN TASK 8 WE USE "<",">" 
BECAUSE WE EXCLUDE THE BOUNDARIES (4000;7000)
*/

--9 TASK
SELECT EMPLOYEE_ID, FULL_NAME, SALARY, JOB_ID 
FROM EMPLOYEES 
WHERE EMPLOYEE_ID IN (144, 102, 200, 205)

--10 TASK
SELECT EMPLOYEE_ID, FULL_NAME, SALARY, JOB_ID 
FROM EMPLOYEES 
WHERE EMPLOYEE_ID NOT IN (144, 102, 200, 205)

--11 TASK
SELECT EMPLOYEE_ID, FULL_NAME, SALARY 
FROM EMPLOYEES 
WHERE RIGHT(FULL_NAME,CHARINDEX(' ', (REVERSE(FULL_NAME))) - 1) LIKE '_a%'

--12 TASK
SELECT LEFT(FULL_NAME,CHARINDEX(' ', FULL_NAME) - 1) AS NAME 
FROM EMPLOYEES 
WHERE LEFT(FULL_NAME,CHARINDEX(' ', FULL_NAME) - 1) LIKE '__a%'

--13 TASK
SELECT EMPLOYEE_ID, FULL_NAME, EMAIL, SALARY
FROM EMPLOYEES	
WHERE SUBSTRING(FULL_NAME, 1, 1)+RIGHT(UPPER(FULL_NAME),CHARINDEX(' ', (REVERSE(UPPER(FULL_NAME)))) - 1) = EMAIL

--14 TASK
SELECT EMPLOYEE_ID, FULL_NAME, EMAIL, SALARY 
FROM EMPLOYEES 
ORDER BY SALARY ASC, HIRE_DAT DESC

--15 TASK
SELECT EMPLOYEE_ID, FULL_NAME, SALARY 
FROM EMPLOYEES 
ORDER BY EMPLOYEE_ID DESC

--16 TASK
SELECT AVG(SALARY) AS AVERAGE, MAX(SALARY) AS MAXIMUM, MIN(SALARY) AS MINIMUM, SUM(SALARY) AS SUMMA 
FROM EMPLOYEES 
WHERE JOB_ID = 'IT_PROG'

--17 TASK
SELECT * 
FROM EMPLOYEES 
WHERE SUBSTRING(PHONE_NUMBER, 1, 1) = SUBSTRING(REVERSE(PHONE_NUMBER), 1, 1)

--18 TASK
SELECT COUNT(DISTINCT JOB_ID) 
FROM EMPLOYEES

--19 TASK
SELECT JOB_ID, SUM(SALARY) AS SUMMA 
FROM EMPLOYEES
GROUP BY JOB_ID

--20 TASK
SELECT JOB_ID, AVG(SALARY) AS AVERAGE
FROM EMPLOYEES
GROUP BY JOB_ID

--21 TASK
SELECT JOB_ID, MAX(SALARY) AS MAXIMUM 
FROM EMPLOYEES 
WHERE SALARY > 10000 
GROUP BY JOB_ID 
ORDER BY MAX(SALARY) DESC

--22 TASK
SELECT MAX(AVG_SALARY) AS MAXIMUM_AVERAGE
FROM (SELECT JOB_ID, AVG(SALARY) AS AVG_SALARY
	FROM EMPLOYEES
	GROUP BY JOB_ID) AS AVG;

--23 TASK
SELECT FULL_NAME, 'earns' AS EARNS, SALARY, 'per month, but wants' AS PER_MONTH_BUT_WANTS, SALARY * 3 AS DREAM_SALARIES
FROM EMPLOYEES

--24 TASK
SELECT FULL_NAME, LEN(FULL_NAME) AS LENGTH
FROM EMPLOYEES

--25 TASK
SELECT LEFT(FULL_NAME,CHARINDEX(' ', FULL_NAME) - 1) AS FIRST_NAME
FROM EMPLOYEES

--26 TASK
SELECT SUBSTRING(LEFT(FULL_NAME,CHARINDEX(' ', FULL_NAME) - 1), 1, 3) AS FIRST_NAME
FROM EMPLOYEES

--27 TASK
SELECT REVERSE(FULL_NAME) AS REVERSED_FULL_NAME
FROM EMPLOYEES

--28 TASK
SELECT REPLACE(FULL_NAME, 'en', 'yu') AS REPLACED
FROM EMPLOYEES

--29 TASK
SELECT UPPER(FULL_NAME) AS UPPER_NAME
FROM EMPLOYEES

--30 TASK
SELECT *, SALARY / 3 AS PRIZE
FROM EMPLOYEES
WHERE JOB_ID = 'IT_PROG' OR JOB_ID = 'AD_VP' OR JOB_ID = 'SH_CLERK'
--OUTPUT IS THE TABLE WHICH SHOWS WHAT PROFFESIONS SHOULD BE GIVEN A PRIZE THAT IS SALARY / 3